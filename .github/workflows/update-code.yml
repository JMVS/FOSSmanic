name: Update from Upstream

on:
  workflow_dispatch:
    inputs:
      upstream_sha:
        description: 'Upstream commit SHA'
        required: true
        type: string

permissions:
  contents: write
  pull-requests: write

jobs:
  update:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout FOSSmanic
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create branch
        id: branch
        run: |
          BRANCH="update-$(date +%Y%m%d-%H%M%S)"
          echo "name=$BRANCH" >> $GITHUB_OUTPUT
          git checkout -b "$BRANCH"

      - name: Clone upstream Unmanic
        run: |
          echo "Cloning Unmanic at commit ${{ inputs.upstream_sha }}"
          
          # Clonar en directorio temporal
          git clone https://github.com/Unmanic/unmanic.git /tmp/unmanic-upstream
          cd /tmp/unmanic-upstream
          git checkout ${{ inputs.upstream_sha }}
          
          echo "âœ“ Cloned upstream"

      - name: Copy upstream code
        run: |
          echo "Copying upstream code..."
          
          # Remover cÃ³digo anterior (excepto foss/ y archivos especiales)
          find . -mindepth 1 -maxdepth 1 \
            ! -name '.git' \
            ! -name '.github' \
            ! -name 'foss' \
            ! -name '.upstream-sha' \
            ! -name 'Dockerfile' \
            ! -name 'docker-compose.yml' \
            ! -name 'README.md' \
            -exec rm -rf {} +
          
          # Copiar todo desde upstream
          cp -r /tmp/unmanic-upstream/* .
          
          echo "âœ“ Copied upstream code"

      - name: Apply FOSS overwrites
        run: |
          echo "Applying FOSS overwrites..."
          
          # Copiar archivos desde foss/ a su ubicaciÃ³n final
          if [ -d foss ]; then
            # session.py
            if [ -f foss/session.py ]; then
              mkdir -p unmanic/libs
              cp foss/session.py unmanic/libs/session.py
              echo "âœ“ Overwritten: unmanic/libs/session.py"
            fi
            
            # Agregar mÃ¡s archivos aquÃ­ si es necesario
            # if [ -f foss/otro.py ]; then
            #   cp foss/otro.py unmanic/libs/otro.py
            # fi
          else
            echo "âœ— ERROR: foss/ directory not found"
            exit 1
          fi

      - name: Verify overwrites
        run: |
          echo "Verifying FOSS patches..."
          
          # Verificar que session.py tiene nuestros cambios
          if grep -q "level = 5" unmanic/libs/session.py && \
             grep -q "library_count = 999" unmanic/libs/session.py; then
            echo "âœ“ session.py verified"
          else
            echo "âœ— ERROR: session.py verification failed"
            exit 1
          fi

      - name: Update metadata
        run: |
          # Guardar SHA de upstream
          echo "${{ inputs.upstream_sha }}" > .upstream-sha
          
          # Actualizar README
          if [ -f README.md ]; then
            SHORT_SHA="${{ inputs.upstream_sha }}"
            SHORT_SHA="${SHORT_SHA:0:7}"
            sed -i "s/Based on Unmanic.*\`/Based on Unmanic commit: \`$SHORT_SHA\`/" README.md || true
          fi

      - name: Commit changes
        run: |
          git add -A
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          git commit -m "Update to upstream ${{ inputs.upstream_sha }}"

      - name: Push branch
        run: |
          git push origin ${{ steps.branch.outputs.name }}

      - name: Create Pull Request
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          SHORT_SHA="${{ inputs.upstream_sha }}"
          SHORT_SHA="${SHORT_SHA:0:7}"
          
          gh pr create \
            --title "ðŸ”„ Update to upstream ${SHORT_SHA}" \
            --body "## Upstream Update

          Merged upstream Unmanic at commit: \`${{ inputs.upstream_sha }}\`

          ### FOSS Overwrites Applied
          - âœ… \`unmanic/libs/session.py\` â†’ FOSS version

          ### Changes
          - Supporter level: 5
          - Library limit: 999
          - Remote installations: 999
          - Phone home: disabled

          ---
          **Auto-generated by GitHub Actions**" \
            --base main \
            --head ${{ steps.branch.outputs.name }}
