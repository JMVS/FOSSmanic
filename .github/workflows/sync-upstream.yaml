# Nombre del Workflow
name: Sync with Unmanic Upstream

# Disparadores (Triggers)
on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 5' # 03:00 UTC todos los viernes

# Trabajos (Jobs)
jobs:
  sync:
    runs-on: ubuntu-latest
    
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true

    steps:
      # 1. Descarga la rama 'main' (el destino final).
      - name: '‚¨áÔ∏è Checkout FOSSmanic `main` branch'
        uses: actions/checkout@v4
        with:
          ref: 'main'
          token: ${{ secrets.PAT_REPO_DISPATCH }}

      # 2. Descarga la rama 'foss' en una carpeta separada para usarla como parche.
      - name: 'üìÇ Checkout `foss` branch for patch files'
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository }}
          ref: 'foss'
          path: 'foss_patches'

      # 3. Clona el repositorio original de Unmanic FUERA del directorio actual.
      - name: 'üì• Clone Unmanic repository'
        # La clave es clonar en ../unmanic_temp para que est√© fuera del destino.
        run: git clone https://github.com/Unmanic/unmanic.git ../unmanic_temp

      # 4. Prepara la carpeta temporal combinando Unmanic y tus parches.
      - name: 'üõ†Ô∏è Prepare temporary directory with patches'
        run: |
          echo "-> Removing original Unmanic workflows..."
          rm -rf ../unmanic_temp/.github/workflows/*
          
          echo "-> Applying patches from 'foss' branch..."
          rsync -av foss_patches/ ../unmanic_temp/

          echo "-> Moving this workflow into its correct place..."
          mkdir -p ../unmanic_temp/.github/workflows
          mv ../unmanic_temp/sync-upstream.yaml ../unmanic_temp/.github/workflows/sync-upstream.yaml

      # 5. Sincroniza el resultado con la carpeta del checkout de 'main'.
      - name: 'üîÅ Synchronize content to `main` working directory'
        # Ahora el origen (../unmanic_temp/) y el destino (.) est√°n separados.
        run: rsync -av --delete --exclude='.git/' --exclude='.github/' ../unmanic_temp/ .

      # 6. Sube los cambios a la rama 'main' si hay diferencias.
      - name: '‚¨ÜÔ∏è Commit and push changes'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          git add -A
          
          if git diff --staged --quiet; then
            echo "No changes to commit. Working tree clean."
            exit 0
          fi
          
          git commit -m "chore(sync): Automatic sync with Unmanic upstream and patch application"
          
          git push
